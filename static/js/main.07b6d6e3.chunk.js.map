{"version":3,"sources":["components/ContactList/Contact.module.css","components/Filter/Filter.module.css","components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/Form/Form.module.css"],"names":["module","exports","Form","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","main__form","this","type","pattern","title","required","onChange","btn","Component","ContactList","contacts","onRemoveContact","list","map","contact","onClick","id","Filter","search__form","inpt","App","filter","addContact","task","cont","includes","alert","uuidv4","prevState","changeFilter","event","getVisibleContacts","toLowerCase","removeContact","contactId","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07b6d6e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contact_list__1E-O2\",\"btn\":\"Contact_btn__ZzRmL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search__form\":\"Filter_search__form__3_ypX\",\"inpt\":\"Filter_inpt__1K4Ba\"};","import React, { Component } from 'react';\nimport styles from './Form.module.css';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={styles.main__form} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.btn} type=\"submit\">\n          add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport styles from './Contact.module.css';\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <ul className={styles.list}>\n    {contacts.map(contact => (\n      <li key={contact.id}>\n        {contact.name + ':' + contact.number}\n        {\n          <button\n            className={styles.btn}\n            type=\"button\"\n            name=\"delte\"\n            onClick={() => onRemoveContact(contact.id)}\n          >\n            delete\n          </button>\n        }\n      </li>\n    ))}\n  </ul>\n);\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.search__form}>\n    Find contacts by name\n    <br />\n    <input\n      className={styles.inpt}\n      type=\"text\"\n      name=\"filter\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Form from './components/Form';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts,\n      });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  addContact = task => {\n    const searchSameName = this.state.contacts\n      .map(cont => cont.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      alert(`${task.name} is already in contacts`);\n    } else {\n      const contact = {\n        ...task,\n        id: uuidv4(),\n      };\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contacts =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  removeContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    const { filter } = this.state;\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onRemoveContact={this.removeContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__form\":\"Form_main__form__3OcY-\",\"btn\":\"Form_btn__aasqa\"};"],"sourceRoot":""}