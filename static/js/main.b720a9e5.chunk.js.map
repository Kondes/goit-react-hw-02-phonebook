{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/ContactList/Contact.module.css","redux/phonebook/actions.js","redux/phonebook/reducers.js","redux/store.js","components/Container/Container.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","actions","state","filter","el","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","reducers","devTools","process","persistor","persistStore","Container","children","Section","title","ContactForm","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","find","alert","reset","onSubmit","className","styles","main__form","this","onChange","type","pattern","required","btn","Component","connect","dispatch","action","target","search__form","inpt","ContactItem","onClick","list","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","length","map","item","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b720a9e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__form\":\"ContactForm_main__form__34Dsg\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search__form\":\"Filter_search__form__3_ypX\",\"inpt\":\"Filter_inpt__1K4Ba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactItem_list__2KPKR\",\"btn\":\"ContactItem_btn__1XxAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contact_list__1E-O2\",\"btn\":\"Contact_btn__ZzRmL\"};","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contact/add', ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\nconst deleteContact = createAction('contact/delete');\n\nconst changeFilter = createAction('filter/change');\n\n// eslint-disable-next-line\nexport default { addContact, deleteContact, changeFilter };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './actions';\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(el => el.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport reducers from './phonebook/reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\nconst store = configureStore({\n  reducer: { contacts: persistReducer(contactsPersistConfig, reducers) },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\nconst persistor = persistStore(store);\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","// import styles from './Container.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => (\n  <div>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n};\n\nexport default Container;\n","// import styles from './Section.module.scss';\nimport PropTypes from 'prop-types';\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n};\n\nexport default Section;\n","import { Component } from 'react';\nimport styles from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/phonebook/actions';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.props.contacts.find(el => el.name === this.state.name)) {\n      alert('already add');\n      this.reset();\n      return;\n    }\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={styles.main__form} onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            value={this.state.name}\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            value={this.state.number}\n            onChange={this.handleChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import styles from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport action from '../../redux/phonebook/actions';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.search__form}>\n    Find contacts by name\n    <input\n      className={styles.inpt}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(action.changeFilter(e.target.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import styles from './ContactItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ id, name, number, onClick }) => {\n  return (\n    <li className={styles.list}>\n      {name}: {number}\n      <button\n        className={styles.btn}\n        type=\"button\"\n        onClick={() => {\n          onClick(id);\n        }}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\nexport default ContactItem;\n","import ContactItem from '../ContactItem';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport action from '../../redux/phonebook/actions';\nimport styles from './Contact.module.css';\n\nconst ContactList = ({ list, onClick }) => {\n  return list.length ? (\n    <ul className={styles.list}>\n      {list.map(item => (\n        <ContactItem\n          key={item.id}\n          id={item.id}\n          onClick={onClick}\n          name={item.name}\n          number={item.number}\n        />\n      ))}\n    </ul>\n  ) : (\n    <p>No matches found</p>\n  );\n};\nContactList.propTypes = {\n  list: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\nconst getVisibleContacts = (items, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\nconst mapStateToProps = state => ({\n  list: getVisibleContacts(state.contacts.items, state.contacts.filter),\n});\nconst mapDispatchToProps = dispatch => ({\n  onClick: id => dispatch(action.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import Container from './components/Container';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nimport { Component } from 'react';\n\nclass App extends Component {\n  render() {\n    return (\n      <Container>\n        <Section title={'Phonebook'}>\n          <ContactForm />\n        </Section>\n        <Section title={'Contacts'}>\n          <Filter />\n          <ContactList />\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// import './styles.scss';\nimport 'modern-normalize/modern-normalize.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}